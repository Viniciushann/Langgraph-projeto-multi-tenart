#!/usr/bin/env python3
"""
Script para executar os INSERTs da Fase 1 - Multi-Tenant
"""
import os
from supabase import create_client, Client
from dotenv import load_dotenv

# Carregar .env.development
env_path = os.path.join('Langcham-fluxo-atendimento', '.env.development')
load_dotenv(env_path)

# Credenciais Supabase DEV
SUPABASE_URL = "https://wmzhbgcqugtctnzyinqw.supabase.co"
SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndtemhiZ2NxdWd0Y3RuenlpbnF3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE3NTQ5NDAsImV4cCI6MjA3NzMzMDk0MH0.pziIBNSJfex-dEJDJ0NeU7awjadoJXg87a8TONc4Xic"

# Credenciais do .env
WHATSAPP_API_KEY = os.getenv('WHATSAPP_API_KEY', '8773E1C40430-4626-B896-1302789BA4D9')

print("=" * 70)
print("üöÄ EXECUTANDO INSERTS - FASE 1")
print("=" * 70)
print()

# Conectar
print("üì° Conectando no Supabase DEV...")
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
print("‚úÖ Conectado!\n")

# ============================================
# PARTE 1: CENTRO-OESTE DRYWALL
# ============================================

print("1Ô∏è‚É£ Inserindo CENTRO-OESTE DRYWALL...")
try:
    tenant_centro_oeste = supabase.table('tenants').insert({
        'nome_empresa': 'Centro-Oeste Drywall',
        'segmento': 'Constru√ß√£o Civil - Drywall',
        'email': 'contato@centrooeste.com.br',
        'telefone': '556299281091',
        'whatsapp_numero': '556299281091',
        'whatsapp_sender_id': 'Centro_oeste_draywal',
        'evolution_api_url': 'https://evolution.centrooestedrywalldry.com.br',
        'evolution_api_key': WHATSAPP_API_KEY,
        'google_calendar_id': 'centrooestedrywalldry@gmail.com',
        'ativo': True,
        'plano': 'pro',
        'preco_mensal': 0.00,
        'metadata': {'cliente_desde': '2024', 'nota': 'Cliente piloto do sistema'}
    }).execute()

    tenant_centro_id = tenant_centro_oeste.data[0]['id']
    print(f"   ‚úÖ Tenant criado: {tenant_centro_id}")

    # Features
    supabase.table('tenant_features').insert({
        'tenant_id': tenant_centro_id,
        'atendimento_basico': True,
        'transcricao_audio': True,
        'analise_imagem': True,
        'rag_habilitado': True,
        'agendamento_habilitado': True,
        'multi_profissional': False,
        'multi_numero': False,
        'analytics_avancado': False,
        'limite_documentos_rag': 500,
        'limite_agendamentos_mes': 1000,
        'tempo_agrupamento_mensagens': 13
    }).execute()
    print("   ‚úÖ Features configuradas")

    # Prompt
    supabase.table('tenant_prompts').insert({
        'tenant_id': tenant_centro_id,
        'nome_assistente': 'Carol',
        'descricao_empresa': 'Centro-Oeste Drywall - Especializada em instala√ß√£o de Drywall em Goi√¢nia',
        'system_prompt': '''Voc√™ √© Carol, assistente virtual da Centro-Oeste Drywall, especializada em instala√ß√£o de Drywall.

Suas responsabilidades:
1. Atender clientes de forma cordial e profissional
2. Agendar visitas t√©cnicas usando a ferramenta de agendamento
3. Responder d√∫vidas sobre servi√ßos de Drywall
4. Buscar informa√ß√µes na base de conhecimento quando necess√°rio

Diretrizes:
- Seja sempre educada e prestativa
- Use linguagem clara e acess√≠vel
- Ao agendar, confirme todos os detalhes
- Se n√£o souber, busque na base de conhecimento ou pe√ßa para o cliente aguardar contato do t√©cnico
- Nunca invente informa√ß√µes''',
        'mensagem_boas_vindas': 'Ol√°! üëã Eu sou a Carol, assistente virtual da Centro-Oeste Drywall! Como posso ajudar voc√™ hoje?',
        'mensagem_fora_horario': 'Nosso hor√°rio de atendimento √© de segunda a sexta, das 8h √†s 18h. Deixe sua mensagem que respondemos no pr√≥ximo dia √∫til!',
        'mensagem_erro': 'Desculpe, tive um problema t√©cnico. Por favor, tente novamente em alguns instantes.',
        'modelo_llm': 'gpt-4o',
        'temperatura': 0.7,
        'max_tokens': 1000,
        'tom_voz': 'amigavel'
    }).execute()
    print("   ‚úÖ Prompt configurado")

    # Profissional
    supabase.table('profissionais').insert({
        'tenant_id': tenant_centro_id,
        'nome_completo': 'T√©cnico Centro-Oeste Drywall',
        'nome_exibicao': 'T√©cnico',
        'especialidade_principal': 'Instala√ß√£o de Drywall',
        'telefone': '55628540075',
        'whatsapp': '55628540075',
        'google_calendar_id': 'centrooestedrywalldry@gmail.com',
        'horarios_atendimento': {
            'segunda': [{'inicio': '08:00', 'fim': '18:00'}],
            'terca': [{'inicio': '08:00', 'fim': '18:00'}],
            'quarta': [{'inicio': '08:00', 'fim': '18:00'}],
            'quinta': [{'inicio': '08:00', 'fim': '18:00'}],
            'sexta': [{'inicio': '08:00', 'fim': '18:00'}],
            'sabado': [{'inicio': '08:00', 'fim': '12:00'}],
            'domingo': []
        },
        'duracao_consulta_minutos': 120,
        'ativo': True,
        'aceita_novos_pacientes': True,
        'bio': 'T√©cnico especializado em instala√ß√£o de Drywall com mais de 10 anos de experi√™ncia'
    }).execute()
    print("   ‚úÖ Profissional cadastrado")

    # Migrar clientes
    result = supabase.table('clients_dev').update({
        'tenant_id': tenant_centro_id
    }).is_('tenant_id', 'null').execute()
    print(f"   ‚úÖ {len(result.data) if result.data else 0} clientes migrados")

    # Migrar documentos
    result = supabase.table('conhecimento_dev').update({
        'tenant_id': tenant_centro_id
    }).is_('tenant_id', 'null').execute()
    print(f"   ‚úÖ {len(result.data) if result.data else 0} documentos migrados")

except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# ============================================
# PARTE 2: CL√çNICA ODONTO SORRISO (TESTE)
# ============================================

print("\n2Ô∏è‚É£ Inserindo CL√çNICA ODONTO SORRISO (teste)...")
try:
    tenant_odonto = supabase.table('tenants').insert({
        'nome_empresa': 'Cl√≠nica Odonto Sorriso',
        'segmento': 'Odontologia',
        'email': 'contato@odontosorriso.com.br',
        'telefone': '5562999999999',
        'whatsapp_numero': '5562999999999',
        'whatsapp_sender_id': 'odonto_teste',
        'ativo': True,
        'plano': 'basic',
        'metadata': {'tenant_tipo': 'teste', 'nota': 'Tenant para valida√ß√£o do sistema multi-tenant'}
    }).execute()

    tenant_odonto_id = tenant_odonto.data[0]['id']
    print(f"   ‚úÖ Tenant criado: {tenant_odonto_id}")

    # Features
    supabase.table('tenant_features').insert({
        'tenant_id': tenant_odonto_id,
        'atendimento_basico': True,
        'transcricao_audio': True,
        'analise_imagem': True,
        'rag_habilitado': True,
        'agendamento_habilitado': True,
        'multi_profissional': True,  # Multi-profissional ATIVO
        'multi_numero': False
    }).execute()
    print("   ‚úÖ Features configuradas")

    # Prompt
    supabase.table('tenant_prompts').insert({
        'tenant_id': tenant_odonto_id,
        'nome_assistente': 'Dra. Ana',
        'descricao_empresa': 'Cl√≠nica Odonto Sorriso - Atendimento odontol√≥gico completo',
        'system_prompt': '''Voc√™ √© Dra. Ana, assistente virtual da Cl√≠nica Odonto Sorriso.

Suas responsabilidades:
1. Atender pacientes de forma acolhedora
2. Agendar consultas com dentistas da cl√≠nica
3. Identificar especialidade necess√°ria (implante, ortodontia, etc)
4. Fornecer informa√ß√µes sobre tratamentos

Diretrizes:
- Seja sempre emp√°tica e profissional
- Pergunte sobre a especialidade necess√°ria
- Sugira o dentista mais adequado
- Confirme todos detalhes do agendamento''',
        'mensagem_boas_vindas': 'Ol√°! üòä Sou a Dra. Ana, assistente da Cl√≠nica Odonto Sorriso. Como posso cuidar do seu sorriso hoje?',
        'modelo_llm': 'gpt-4o',
        'temperatura': 0.7,
        'tom_voz': 'profissional'
    }).execute()
    print("   ‚úÖ Prompt configurado")

    # Especialidades
    especialidades_data = [
        {
            'tenant_id': tenant_odonto_id,
            'nome': 'Implantes',
            'descricao': 'Implantes dent√°rios e pr√≥teses fixas',
            'keywords': ['implante', 'implante dent√°rio', 'dente fixo', 'pr√≥tese fixa'],
            'ativa': True
        },
        {
            'tenant_id': tenant_odonto_id,
            'nome': 'Ortodontia',
            'descricao': 'Aparelhos ortod√¥nticos e alinhadores',
            'keywords': ['aparelho', 'ortodontia', 'alinhar dentes', 'corrigir mordida'],
            'ativa': True
        },
        {
            'tenant_id': tenant_odonto_id,
            'nome': 'Cl√≠nico Geral',
            'descricao': 'Atendimento odontol√≥gico geral',
            'keywords': ['limpeza', 'canal', 'obtura√ß√£o', 'extra√ß√£o', 'dor de dente'],
            'ativa': True
        }
    ]
    supabase.table('especialidades').insert(especialidades_data).execute()
    print("   ‚úÖ 3 especialidades cadastradas")

    # Profissionais
    profissionais_data = [
        {
            'tenant_id': tenant_odonto_id,
            'nome_completo': 'Dr. Jo√£o Silva',
            'nome_exibicao': 'Dr. Jo√£o',
            'crm_cro': 'CRO-GO 12345',
            'especialidade_principal': 'Implantes',
            'email': 'joao@odontosorriso.com.br',
            'telefone': '5562988888888',
            'duracao_consulta_minutos': 60,
            'ativo': True,
            'bio': 'Especialista em implantodontia com 15 anos de experi√™ncia'
        },
        {
            'tenant_id': tenant_odonto_id,
            'nome_completo': 'Dra. Maria Santos',
            'nome_exibicao': 'Dra. Maria',
            'crm_cro': 'CRO-GO 54321',
            'especialidade_principal': 'Ortodontia',
            'email': 'maria@odontosorriso.com.br',
            'telefone': '5562977777777',
            'duracao_consulta_minutos': 45,
            'ativo': True,
            'bio': 'Ortodontista especializada em alinhadores invis√≠veis'
        },
        {
            'tenant_id': tenant_odonto_id,
            'nome_completo': 'Dr. Pedro Costa',
            'nome_exibicao': 'Dr. Pedro',
            'crm_cro': 'CRO-GO 98765',
            'especialidade_principal': 'Cl√≠nico Geral',
            'email': 'pedro@odontosorriso.com.br',
            'telefone': '5562966666666',
            'duracao_consulta_minutos': 30,
            'ativo': True,
            'bio': 'Cl√≠nico geral com atendimento a todas as idades'
        }
    ]
    supabase.table('profissionais').insert(profissionais_data).execute()
    print("   ‚úÖ 3 profissionais cadastrados")

except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# ============================================
# VALIDA√á√ÉO
# ============================================

print("\n" + "=" * 70)
print("üìä VALIDA√á√ÉO FINAL")
print("=" * 70)

tenants = supabase.table('tenants').select('*').execute()
print(f"\n‚úÖ {len(tenants.data)} tenants criados:")
for t in tenants.data:
    print(f"   ‚Ä¢ {t['nome_empresa']} ({t['plano']}) - {t['whatsapp_numero']}")

features = supabase.table('tenant_features').select('count', count='exact').execute()
print(f"\n‚úÖ {features.count} configura√ß√µes de features")

prompts = supabase.table('tenant_prompts').select('count', count='exact').execute()
print(f"‚úÖ {prompts.count} prompts configurados")

profissionais = supabase.table('profissionais').select('count', count='exact').execute()
print(f"‚úÖ {profissionais.count} profissionais cadastrados")

especialidades = supabase.table('especialidades').select('count', count='exact').execute()
print(f"‚úÖ {especialidades.count} especialidades")

clientes = supabase.table('clients_dev').select('id', count='exact').not_.is_('tenant_id', 'null').execute()
print(f"‚úÖ {clientes.count} clientes migrados")

docs = supabase.table('conhecimento_dev').select('id', count='exact').not_.is_('tenant_id', 'null').execute()
print(f"‚úÖ {docs.count} documentos migrados")

print("\nüéâ FASE 1 CONCLU√çDA COM SUCESSO!")
print("=" * 70)
